<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     default_default
 * @copyright   Copyright (c) 2006-2015 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>

<?php if (is_array($this->getChild('diagrams')->getTabsIds())) : ?>
<script type="text/javascript">
//<![CDATA[
function changeDiagramsPeriod(periodObj) {
    periodParam = periodObj.value ? 'period/' + periodObj.value + '/' : '';
<?php foreach ($this->getChild('diagrams')->getTabsIds() as $tabId): ?>
    ajaxBlockParam = 'block/tab_<?php echo $tabId ?>/';
    ajaxBlockUrl = '<?php echo $this->getUrl('*/*/ajaxBlock', array('_current' => true, 'block' => '', 'period' => '')) ?>' + ajaxBlockParam + periodParam;
    new Ajax.Request(ajaxBlockUrl, {
        parameters: {isAjax: 'true', form_key: FORM_KEY},
        onSuccess: function(transport) {
            tabContentElementId = '<?php echo $this->getChild('diagrams')->getId() ?>_<?php echo $tabId ?>_content';
            try {
                if (transport.responseText.isJSON()) {
                    var response = transport.responseText.evalJSON()
                    if (response.error) {
                        alert(response.message);
                    }
                    if(response.ajaxExpired && response.ajaxRedirect) {
                        setLocation(response.ajaxRedirect);
                    }
                } else {
                    $(tabContentElementId).update(transport.responseText);
                }
            }
            catch (e) {
                $(tabContentElementId).update(transport.responseText);
            }
        }
    });
<?php endforeach; ?>
    ajaxBlockUrl = '<?php echo $this->getUrl('*/*/ajaxBlock', array('_current' => true, 'block' => 'totals', 'period' => '')) ?>' + periodParam;
    new Ajax.Request(ajaxBlockUrl, {
        parameters: {isAjax: 'true', form_key: FORM_KEY},
        onSuccess: function(transport) {
            tabContentElementId = 'dashboard_diagram_totals';
            try {
                if (transport.responseText.isJSON()) {
                    var response = transport.responseText.evalJSON()
                    if (response.error) {
                        alert(response.message);
                    }
                    if(response.ajaxExpired && response.ajaxRedirect) {
                        setLocation(response.ajaxRedirect);
                    }
                } else {
                    $(tabContentElementId).replace(transport.responseText);
                }
            }
            catch (e) {
                $(tabContentElementId).replace(transport.responseText);
            }
        }
    });
}

function toggleCal(id) {
    $('dashboard_'+id+'_cal_div').toggle();
    $('dashboard_'+id+'_range_div').toggle();
}
//]]>
</script>
<?php endif; ?>
<div class="content-header">
    <table cellspacing="0">
        <tr>
            <td><h3 class="head-dashboard"><?php echo $this->__('Dashboard') ?></h3></td>
        </tr>
    </table>
</div>
<div class="dashboard-container">

    <div class="entry-edit" style="margin:25px">
        <div class="entry-edit-head"><h4><?php echo $this->__('Déclaration trismestrielle') ?></h4></div>
        <fieldset class="a-center bold">
            <span class="nowrap" style="font-size:15px;">
                Prochaine déclaration trimestrielle dans <?php echo $this->helper('compta_invoice')->getDaysUntilNextDeclaration(); ?> jours (le
                <?php echo $this->helper('core')->formatDate($this->helper('compta_invoice')->getNextDateDeclaration(), 'medium'); ?>)
            </span>
        </fieldset>
    </div>


    <?php

    $monthsTrad = array(
        '1' => 'Janv.',
        '2' => 'Févr.',
        '3' => 'Mars',
        '4' => 'Avr.',
        '5' => 'Mai',
        '6' => 'Juin',
        '7' => 'Juil.',
        '8' => 'Août',
        '9' => 'Sept.',
        '10' => 'Oct.',
        '11' => 'Novr.',
        '12' => 'Déc.'
    );


    $nextRangeMonth[date('Y-m')] = date('Y-m');
    $beforeRangeMonth = array();

    for($i = 1; $i<= 4; $i++) {
        $nextMonthDate = date('Y-m', strtotime("+$i months", strtotime(date('Y-m') . '-01')));
        $nextRangeMonth[$nextMonthDate] = $nextMonthDate;
    }


    for($i = 0; $i<= 3; $i++) {
        $beforeMonthDate = date('Y-m', strtotime("-$i months", strtotime(date('Y-m') . '-01')));
        $beforeRangeMonth[$beforeMonthDate] = $beforeMonthDate;
    }

    $paidBeforeMonth = array();


    foreach($beforeRangeMonth as $month) {

        $invoices = Mage::getModel('compta_invoice/invoice')->getCollection()
            ->addFieldToFilter('adjusted', 1)
            ->addFieldToFilter('payment_date', array('like' => $month.'%'))
            ->addFieldToSelect('*');

        $paidBeforeMonth[$month] = 0;

        foreach($invoices as $invoice) {
            $paidBeforeMonth[$month] += $invoice->getAmount();
        }

    }

    ///////

    $tab = array();

    $calendarCollection = Mage::getModel('compta_calendar/calendar')->getCollection();

    foreach ($calendarCollection as $calendar) {

        $dateValues = Mage::helper('core')->jsonDecode($calendar->getValues());
        foreach ($dateValues as $day => $nhour) {
            $customer = Mage::getModel('compta_customer/customer')->load($calendar->getCustomerId());

            $delayPaiement = $customer->getPaiementDelay();
            $yyyy_mm = substr($day, 0, 7);

            if(!isset($tab[$yyyy_mm][$calendar->getCustomerId()]['nbhour'])) {
                $tab[$yyyy_mm][$calendar->getCustomerId()]['nbhour'] = 0;
            }
            $tab[$yyyy_mm][$calendar->getCustomerId()]['nbhour']+=$nhour;
            $tab[$yyyy_mm][$calendar->getCustomerId()]['delay'] = $delayPaiement;

        }
    }


    ksort($tab);
    foreach($tab as $monthYYYYmm => $customerId) {

        foreach($customerId as $cId => $data) {

            $addDay = $data['delay'] ? $data['delay'] : "0";

            $nextMonthDate = date('Y-m', strtotime("+1 months +$addDay days", strtotime($monthYYYYmm . '-01')));
            $customer = Mage::getModel('compta_customer/customer')->load($calendar->getCustomerId());


            if(!isset($prevision[$nextMonthDate])) {
                $prevision[$nextMonthDate] = 0;
            }
            $prevision[$nextMonthDate] += ($customer->getThm() * $data['nbhour']);
        }


    }

    $paidAfterMonth = array();
    foreach($nextRangeMonth as $yyyyMM) {
        if(isset($prevision[$yyyyMM])) {
            $paidAfterMonth[$yyyyMM] = $prevision[$yyyyMM];
        } else {
            $paidAfterMonth[$yyyyMM] = 0;
        }
    }

    ksort($paidBeforeMonth);

    $beforeMonths = array();
    $afterMonths = array();
    $totalMonths = array();
    $totalMonthsTrad = array();

    foreach($paidBeforeMonth as $paidBeforeMonth => $amount) {
        $year = (int) substr($paidBeforeMonth, 0, -2);
        $month = (int) substr($paidBeforeMonth, 5, 7);
        $beforeMonths[$year . '-' .$month] = $amount;
        $totalMonths[] = $year . '-' .$month;
        $totalMonthsTrad[$monthsTrad[$month] . ' ' .$year] = $monthsTrad[$month] . ' ' .$year;
    }

    foreach($paidAfterMonth as $paidAfterMonth => $amount) {
        $year = (int) substr($paidAfterMonth, 0, -2);
        $month = (int) substr($paidAfterMonth, 5, 7);
        $afterMonths[$year . '-' .$month] = $amount;
        $totalMonths[] = $year . '-' .$month;
        $totalMonthsTrad[$monthsTrad[$month] . ' ' .$year] =  $monthsTrad[$month] . ' ' .$year;
    }

    foreach($totalMonths as $tMonth) {

        if(!isset($beforeMonths[$tMonth])) {
            $beforeMonths[$tMonth] = 0;
        }
        if(!isset($afterMonths[$tMonth])) {
            $afterMonths[$tMonth] = 0;
        }
    }

    ksort($beforeMonths);
    ksort($afterMonths);

    $beforeMonthsNet = array();
    $afterMonthsNet = array();

    foreach($beforeMonths as $k => $v) {
        $beforeMonthsNet[$k] = $this->helper('compta_invoice')->toNet($v);
    }


    foreach($afterMonths as $k => $v) {
        $afterMonthsNet[$k] = $this->helper('compta_invoice')->toNet($v);
    }

    ?>

    <div style="padding-left:26px !important">
        <button onclick="jQuery('#myChartNet').removeClass('no-display');jQuery('#myChart').addClass('no-display');">NET</button>
        <button onclick="jQuery('#myChartNet').addClass('no-display');jQuery('#myChart').removeClass('no-display');">BRUT</button>
    </div>
<style>.chart {width:82%}</style>
    <div id="myChart" class="chart" style="min-height: 300px; margin: 0 auto"></div>
    <div id="myChartNet" class="chart no-display" style=" min-height: 300px; margin: 0 auto"></div>

    <script type="text/javascript">

        jQuery(function () {
            jQuery('#myChart').highcharts({
                chart: {
                    type: 'column'
                },
                title: {
                    text: "CA Prévisionnel BRUT"
                },
                xAxis: {
                    categories: ["<?php echo implode('","', array_values($totalMonthsTrad)); ?>"]
                },
                yAxis: {
                    min: 0,
                    title: {
                        text: 'CA'
                    },
                    stackLabels: {
                        enabled: true,
                        style: {
                            fontWeight: 'bold',
                            color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                        }
                    }
                },
                legend: {
                    align: 'right',
                    x: -30,
                    verticalAlign: 'top',
                    y: 25,
                    floating: true,
                    backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',
                    borderColor: '#CCC',
                    borderWidth: 1,
                    shadow: false
                },
                tooltip: {
                    headerFormat: '<b>{point.x}</b><br/>',
                    pointFormat: '{series.name}: {point.y} € <br/>Total: {point.stackTotal} €'
                },
                plotOptions: {
                    column: {
                        stacking: 'normal',
                        dataLabels: {
                            enabled: true,
                            color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white',
                            style: {
                                textShadow: '0 0 3px black'
                            },
                            format: '{point.y:.0f} €'
                        }
                    }
                },
                series: [{
                    name: 'Encaissé',
                    color : "#A1D490",
                    data: [<?php echo implode(',', array_values($beforeMonths)); ?>]
                }, {
                    name: 'Prévision',
                    color: "#F0E171",
                    data: [<?php echo implode(',', array_values($afterMonths)); ?>]
                }]
            });
            jQuery('#myChartNet').highcharts({
                chart: {
                    type: 'column'
                },
                title: {
                    text: "CA Prévisionnel NET (-50%)"
                },
                xAxis: {
                    categories: ["<?php echo implode('","', $totalMonthsTrad); ?>"]
                },
                yAxis: {
                    min: 0,
                    title: {
                        text: 'CA'
                    },
                    stackLabels: {
                        enabled: true,
                        style: {
                            fontWeight: 'bold',
                            color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                        }
                    }
                },
                legend: {
                    align: 'right',
                    x: -30,
                    verticalAlign: 'top',
                    y: 25,
                    floating: true,
                    backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',
                    borderColor: '#CCC',
                    borderWidth: 1,
                    shadow: false
                },
                tooltip: {
                    headerFormat: '<b>{point.x}</b><br/>',
                    pointFormat: '{series.name}: {point.y} € <br/>Total: {point.stackTotal} €'
                },
                plotOptions: {
                    column: {
                        stacking: 'normal',
                        dataLabels: {
                            enabled: true,
                            color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white',
                            style: {
                                textShadow: '0 0 3px black'
                            },
                            format: '{point.y:.0f} €'
                        }
                    }
                },
                series: [{
                    name: 'Encaissé',
                    color : "#A1D490",
                    data: [<?php echo implode(',', array_values($beforeMonthsNet)); ?>]
                }, {
                    name: 'Prévision',
                    color: "#F0E171",
                    data: [<?php echo implode(',', array_values($afterMonthsNet)); ?>]

                }]
            });
        });
    </script>



    <?php echo $this->getChildHtml('store_switcher') ?>
    <table cellspacing="25" width="100%">
        <tr>
            <td><?php echo $this->getChildHtml('sales') ?>
                <div class="entry-edit">
                    <div class="entry-edit-head"><h4><?php echo $this->__('5 dernières factures payées') ?></h4></div>
                    <fieldset class="np"><?php echo $this->getChildHtml('lastInvoices'); ?></fieldset>
                </div>
                <div class="entry-edit">
                    <div class="entry-edit-head"><h4><?php echo $this->__('Factures impayées') ?></h4></div>
                    <fieldset class="np"><?php echo $this->getChildHtml('lastUnpaid'); ?></fieldset>
                </div>

                <div class="entry-edit">
                    <div class="entry-edit-head"><h4><?php echo $this->__("Chiffre d'affaires ces derniers mois") ?></h4></div>
                    <fieldset class="np"><?php echo $this->getChildHtml('lastMonth'); ?></fieldset>
                </div>
            </td>
            <td>
                <div class="entry-edit" style="width:550px;margin-right:0">
                    <?php //echo $this->getChildHtml('diagrams') ?>
                    <?php if (is_array($this->getChild('diagrams')->getTabsIds())) : ?>
                        <div id="diagram_tab_content"></div>
                    <?php endif; ?>
                    <div>
                        <div class="entry-edit-head"><h4>Prévisions CA</h4></div>
                        <?php echo $this->getChildHtml('totals') ?>
                    </div>
                    <div>
                        <?php echo $this->getChildHtml('grids') ?>
                        <div id="grid_tab_content"></div>
                    </div>
                </div>
            </td>
        </tr>
    </table>
</div>
